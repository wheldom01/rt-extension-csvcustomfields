# (c) Martin Wheldon
# Info: https://github.com/wheldom01/rt-extension-csvcustomfields
#
# This code is free software; you can redistribute it and/or
# modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
# License as published by the Free Software Foundation; either
# version 3 of the License, or any later version.
#
# This code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU AFFERO GENERAL PUBLIC LICENSE for more details.
#
# You should have received a copy of the GNU Affero General Public
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#

<%INIT>
# FIXME: needs changing to debug
$RT::Logger->error("Callback activated");

# We are only interested if the keys containing Rows and Columns
my @Subkeys;
foreach my $key (keys %$ARGSRef) {
    push (@Subkeys, $key) if $key =~ m/--Row\d+-Col\d+/xms;
}

# A simple sort is enough to put them in the correct order
@Subkeys = sort(@Subkeys);

my $CF_hash = {};
my @tmp;
my $value = q{ };
my $cf = q{ };
my $this_row = 0;
my $previous_row = 0;

# Assemble into a RT FreeForm text format
foreach my $key (@Subkeys) {
    ($cf, $this_row) = $key =~ m/\A         # Match start of string
                                 ([\w\-:]+) # Capture the CustomField
                                 --Row
                                 (\d+)      # Capture the row number
                                /xms;

    # Apply a line ending if we have reached the last column
    if ($this_row > $previous_row) {
        $previous_row = $this_row;
        $value =~ s/,$/\n/;
    }

    # Build the CF csv data and push into a temporary hash
    $value .= $ARGSRef->{$key} . ",";
    $CF_hash->{$cf} = $value;

    # Remove all the keys as they would cause duplicate data to be added
    delete $ARGSRef->{$key};
}

# Now tidy up and push the CF data back into the ARGSRef
foreach my $key (keys %$CF_hash) {
    # Split contents of hash key into a array and modify as required
    my @lines = split /\n/, $CF_hash->{$key};

    # Strip empty lines and trailing commas then reasemble into multiline
    # string
    @lines = grep { not /^,{1,}$/ } @lines;
    @lines = map { s/,*$/\n/; $_ } @lines;
    $CF_hash->{$key} = join '', @lines;
    $ARGSRef->{$key} = $CF_hash->{$key};
}

</%INIT>
<%ARGS>
$ARGSRef => undef
</%ARGS>
